#version 330

out vec4 pixelColor; //Zmienna wyjsciowa fragment shadera. Zapisuje sie do niej ostateczny (prawie) kolor piksela

in vec4 iV;
in vec4 iN;
in vec4 iL;
in vec4 iC;
in vec3 iTexCoords0;

uniform sampler2D textureMap0;
uniform sampler2D textureMap1;

float shininess=25;



void main(void) {
	//vec4 eyeN=normalize(iN);
	//vec4 eyeV=normalize(iV);
	//vec4 eyeL=normalize(iL);
	//vec4 eyeR=reflect(-eyeL,eyeN);

	//float nl=max(0,dot(eyeL,eyeN));
	//float rv=pow(max(0,dot(eyeR,eyeV)),shininess);

	vec4 La=vec4(0,0,0,0); //kolor swiatla otoczenia
	vec4 Ma=vec4(0,0,0,0); //kolor materialu dla swiatla otoczenia
	vec4 Ld=vec4(1,1,1,1); //kolor swiatla rozpraszanego
	vec4 Md=texture(textureMap0,iTexCoords0.xy);            //kolor materialu dla swiatla rozpraszanego
	vec4 Ls=vec4(1,1,1,0); //kolor swiatla odbijanego
	vec4 Ms=texture(textureMap1,iTexCoords0.xy); //kolor materialu dla swiatla odbitego

	pixelColor=Ld*Md*1;
}
